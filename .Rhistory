df <- tbl.scholar                                                                                   #data backup
names(df)<-tolower(names(df))                                                                       #change column names to lower case since don't know how input will be formatted
View(df)
names(df)[st_pos:ncol(df)-4] <- paste("AY", paste0(as.numeric(substr(min(df$cohort), 1, 2)) + 0:(ncol(df) - st_pos),
as.numeric(substr(min(df$cohort), 3, 4)) + 0:(ncol(df) - st_pos)),
sep="_")
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
View(df)
df <- tbl.scholar                                                                                   #data backup
names(df)<-tolower(names(df))
names(df)[st_pos:ncol(df)-4] <- paste("AY", paste0(as.numeric(substr(min(df$cohort), 1, 2)) + 0:(ncol(df) - st_pos),
as.numeric(substr(min(df$cohort), 3, 4)) + 0:(ncol(df) - st_pos)),
sep="_")
names(df)[st_pos:ncol(df)] <- paste("AY", paste0(as.numeric(substr(min(df$cohort), 1, 2)) + 0:(ncol(df) - st_pos),
as.numeric(substr(min(df$cohort), 3, 4)) + 0:(ncol(df) - st_pos)),
sep="_")
st_pos <- 6                                                                                         #concerned column's start position in the given dataframe
df <- tbl.scholar                                                                                   #data backup
names(df)<-tolower(names(df))
cols <- names(df)[st_pos:ncol(df)-4]
cols <- names(df)[st_pos:ncol(df)]
cols
cols <- names(df)[st_pos:(ncol(df)-4)]
cols
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
mapply(function(x, y)
df[df$cohort == x & df$studentid == y, which(grepl(x, cols)) + (st_pos-1):(st_pos+2)] <<-
df[df$cohort == x & df$studentid == y, which(grepl(x, cols)) + (st_pos-1)],
df$cohort, df$studentid)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
install_github('arilamstein/choroplethrZip@v1.3.0')
install_github('arilamstein/choroplethrZip')
install.packages(c("choroplethr", "choroplethrMaps"))
packrat::unbundle(bundle = "C:/Users/gfalk/Downloads/R_Performance.3.3.0-2018-05-03.tar.gz", where="C:/Users/gfalk/Documents/")
packrat::clean(dry.run = TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
plot(map.GaCommitByCounty)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar)
tbl.scholar$RZRSCTR_TERM_COUNT
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
df$rzrsctr_term_count
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
df[df$cohort == x & df$studentid == y, which(grepl(x, cols)) + (st_pos-1):(st_pos + df$rzrsctr_term_count)] <<-
df[df$cohort == x & df$studentid == y, which(grepl(x, cols)) + (st_pos-1)]
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
is.data.table(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
is.data.table(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
?replicate
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
packrat::unbundle(bundle = "C:/Users/gfalk/Downloads/R_Performance.3.3.0-2018-05-03.tar.gz", where="C:/Users/gfalk/Documents/")
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar1)
View(tbl.scholar)
View(tbl.scholar1)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar1)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByZip)
View(logger)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(map.GaCommitByCounty)
View(chart.GaCommitByCounty)
y<-chart.GaCommitByZip %>% left_join(jctCountyZip)
y
str(y)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(chart.GaCommitByCounty)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(chart.GaCommitByCounty)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
library(RDCOMClient)
# Open a specific workbook in Excel:
xlApp <- COMCreate("Excel.Application")
xlWbk <- xlApp$Workbooks()$Open("S:\\ScholarshipsProject\\R\\ScholarshipProject\\output\\scholarCompare.xlsm")
# this line of code might be necessary if you want to see your spreadsheet:
xlApp[['Visible']] <- FALSE
# Run the macro called "MyMacro":
xlApp$Run("scholarDiff")
# Close the workbook and quit the app:
xlWbk$Close(FALSE)
xlApp$Quit()
# Release resources:
rm(xlWbk, xlApp)
gc()
View(chart.GaCommitByCounty)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(chart.GaCommitByZip)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(data_files)
View(df)
View(df)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(chart.GaCommitByCounty)
View(county.regions)
View(counties)
View(county.fips)
View(county.regions)
View(jctCountyZip)
d<-chart.GaCommitByZip %>%
left_join(jctCountyZip) %>%
d<-chart.GaCommitByZip %>%
left_join(jctCountyZip)
d<-chart.GaCommitByZip %>%left_join(jctCountyZip)
d
View(d)
write.csv(chart.GaCommitByZip %>%left_join(jctCountyZip), "graphs/list.GaCommitByCount.csv", row.names=F)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar)
View(df)
unique(df[,1])
unique(df[,4])
out <- split( df , f = unique(df[,4]))
out <- split( df , unique(df[,4]))
is.data.table(df)
df<-data.table(df)
is.data.table(df)
g<-data.table(df)  %>% group_by(cohort)
g
View(g)
g<-data.table(df)  %>% group_by(cohort) %>% arrange(cohort)
g
out <- split( df , unique(df[,4]))
unique(df[,4])
s<-split(df, unique(df[,4]))
View(s)
View(s[["1718"]])
View(s)
View(s[["1819"]])
s<-split(df, unique(df[,4][1]))
s
View(s)
s<-split(df, unique(df[,4][1]))
View(s)
View(s)
View(s)
View(s)
View(s[["1819"]])
unique(df[,4][1]))
unique(df[,4][1])
s<-split(df, filter(unique(df[,4][1])))
s
View(s)
View(s[["1819"]])
df%>%
group_by(cohort)%>%
nest()
df%>%
group_by(id)%>%
nest()%>%
.$data
df%>%
group_by(id)%>%
nest()%>%
.$cohort
df%>%
group_by(id)%>%
nest()
df
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
df2<data.table(df)
df2<-data.table(df)
df1<-split(df2,df$cohort)
View(df1)
names(list.df1)
names(df1)
names(df1) <- DiD
lapply(names(df1), function(x) as.data.table(mylist[[df1]]))
lapply(names(df1), function(x) as.data.table(mylist[[df1]])
df1<-split(df2,df$cohort)
df3<-df%>%
group_by(id)%>%
nest()
df3<-df%>%
group_by(cohort)%>%
nest()
df2%>%
group_by(cohort)%>%
nest()
View(df2)
df2
View(df2)
df%>%
group_by(cohort)%>%
nest()
lapply(names(df1),
function(x)write.csv(mylist[x],
file =paste0(x,'.csv')))
lapply(names(df1),
function(x)write.csv(df1[x],
file =paste0(x,'.csv')))
getwd()
df1<-split(df2,df$cohort)
lapply(names(df1),
function(x)write.xlsx(as.data.frame(df1[x]),
file =paste0(x,'.xlsx'),
sheetName=x,
append=TRUE))
lapply(names(df1),
function(x)write.xlsx(as.data.frame(df1[x]),
file =paste0(Test,'.xlsx'),
sheetName=x,
append=TRUE))
lapply(names(df1),
function(x)write.xlsx(as.data.frame(df1[x]),
file ="output/tbl_scholarships.xlsx",
sheetName=x,
append=TRUE))
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
View(tbl.scholar)
lapply(names(split(tbl.scholar,tbl.scholar$cohort)),
function(x)write.xlsx(as.data.frame(tbl.scholar[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
lapply(names(split(df,df$cohort)),
function(x)write.xlsx(as.data.frame(df[x]),
file ="output/scholar2.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
df%>%
group_by(cohort)%>%
nest()%>%
lapply(names(df),
function(x)write.xlsx(as.data.frame(df[x]),
file ="output/scholar2.xlsx.xlsx",
sheetName=x,
append=TRUE))
df%>%
group_by(cohort)%>%
nest()%>%
lapply(names(df),
function(x)write.xlsx(df[x],
file ="output/scholar2.xlsx.xlsx",
sheetName=x,
append=TRUE))
df%>%lapply(names(split(df,df$cohort)),
function(x)write.xlsx(as.data.frame(df[x]),
file ="output/scholar2.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
lapply(names(split(df,df$cohort)),
function(x)write.xlsx(df[x],
file ="output/scholar2.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
split(tbl.scholar,tbl.scholar$cohort))
split(tbl.scholar,tbl.scholar$cohort)
names(split(tbl.scholar,tbl.scholar$cohort))
names(split(tbl.scholar,tbl.scholar$cohort))
split(tbl.scholar,tbl.scholar$cohort)
lapply(split(tbl.scholar,names(tbl.scholar$cohort)),
function(x)write.xlsx(as.data.frame(tbl.scholar[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
tbl_scholar1<-split(tbl.scholar,tbl.scholar$cohort)
lapply(names(tbl_scholar1),
function(x)write.xlsx(as.data.frame(tbl.scholar1[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
tbl_scholar1<-split(tbl.scholar,tbl.scholar$cohort)
lapply(names(tbl_scholar1),
function(x)write.xlsx(as.data.frame(tbl.scholar1[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
tbl.scholar1<-split(tbl.scholar,tbl.scholar$cohort)
lapply(names(),
function(x)write.xlsx(as.data.frame(tbl.scholar[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
tbl.scholar1<-split(tbl.scholar,tbl.scholar$cohort)
lapply(names(tbl.scholar1),
function(x)write.xlsx(as.data.frame(tbl.scholar[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
tbl.scholar1<-split(tbl.scholar,tbl.scholar$cohort)
lapply(names(tbl.scholar1),
function(x)write.xlsx(as.data.frame(tbl.scholar1[x]),
file ="output/scholar.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
tbl.scholar2<-split(df,df$cohort)
lapply(names(tbl.scholar2),
function(x)write.xlsx(as.data.frame(tbl.scholar2[x]),
file ="output/scholar2.xlsx",
row.names=F,
sheetName=x,
append=TRUE))
names(tbl.scholar2
names(tbl.scholar2)
df%>%
group_by(cohort)%>%
nest()%>%
lapply(names(df),
function(x)write.xlsx(as.data.frame(df[x]),
file ="output/scholar2.xlsx",
sheetName=x,
append=TRUE))
names(df)
df%>%
group_by(cohort)%>%
nest()
df%>%
group_by(cohort)%>%
nest()% names(x)
df%>%
group_by(cohort)%>%
nest()% names(df)
df%>%
group_by(cohort)%>%
nest()%>% names(df)
df%>%
group_by(cohort)%>%
nest()%>% names()
df
df1<-split(df,df$cohort)%<%    lapply(names(df1),
function(x)write.xlsx(as.data.frame(df[x]),
file ="output/scholar2.xlsx",
sheetName=x,
append=TRUE))
df1<-split(df,df$cohort)
df1%<%lapply(names(df1),
function(x)write.xlsx(as.data.frame(df1[x]),
file ="output/scholar2.xlsx",
sheetName=x,
append=TRUE))
lapply(names(df1),
function(x)write.xlsx(as.data.frame(df1[x]),
file ="output/scholar2.xlsx",
sheetName=x,
append=TRUE))
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
source('S:/ScholarshipsProject/R/ScholarshipProject/ScholarshipProject.r', echo=TRUE)
